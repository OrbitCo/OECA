/*! knockout-valdiation-rule-engine - v1.0.0 - 2013-12-13
* Copyright (c) 2013 Christian Oestreich; Licensed MIT */
!function(e){"function"==typeof require&&"object"==typeof exports&&"object"==typeof module?e(require("knockout"),require("knockout.validation"),exports):"function"==typeof define&&define.amd?define(["knockout","knockout.validation.js","exports"],e):e(ko,ko.validation,ko.RuleEngine={})}(function(e, t, i){if(void 0===typeof e)throw"Knockout is required, please ensure it is loaded before loading this plug-in";if(void 0===typeof t)throw"Knockout.Validation is required, please ensure it is loaded before loading this plug-in";var n={deep:!0};return i=function(t, i){function o(e, n){n&&f.extend(t,n),l(e,i)}function r(e){return t[e]||{}}function u(t, i){e.validation.rules[t]=i,e.validation.registerExtenders()}function a(e){f.extend(t,e||{})}function d(t){i=f.extend(n,t),e.validation.init(i)}function l(t,i,n){var o=[],u=f.unwrapObservable(t);e.isObservable(t)&&!t.isValid&&t.extend({validatable:!0}),u&&(s(u)||c(u))&&(o=u),f.objectForEach(o,function(t,o){var u=(n?n+".":"")+t,a=r(u);a&&e.isObservable(o)&&o.extend(a),i.deep&&void 0!==o&&!e.isObservable(o)&&l(o,i,u)})}function s(e){return e.isArray||"[object Array]"===Object.prototype.toString.call(e)}function c(e){return null!==e&&"object"==typeof e}var f=e.utils;return i=i||{},t=t||{},d(i),{addRule:u,addRuleSet:a,apply:o,getFieldRuleSet:r,registerExtenders:e.validation.registerExtenders,ruleSet:t,rules:e.validation.rules}},e.RuleEngine=i,e.RuleEngine});